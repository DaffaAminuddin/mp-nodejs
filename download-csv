<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CV Bulk Extractor</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles-2.css">
    <style>
        body {
            background-color: #f8f9fa; /* Light gray background for contrast */
            min-height: 100vh;
        }
        .hero-container {
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            margin-top: 5rem;
        }
    </style>
</head>
<body>
    <div class="container d-flex justify-content-center">
        <div class="hero-container text-center w-75">
            <h1 class="mb-4">CV Bulk Extractor</h1>
            <p class="text-muted">Upload your resumes (PDF) for bulk processing. Non-subscribers are limited to 10 files.</p>
            
            <!-- Upload Form -->
            <form id="upload-form" class="mb-3">
                <div class="mb-3">
                    <label for="file-input" class="form-label">Select PDF Files</label>
                    <input type="file" id="file-input" name="files" multiple class="form-control" accept=".pdf">
                </div>
                <button type="button" id="upload-btn" class="btn btn-primary">Upload & Process</button>
            </form>

            <!-- Download Button -->
            <div>
                <button id="download-btn" class="btn btn-success" style="display: none;">Download Processed File</button>
            </div>

            <!-- Status Message -->
            <div id="status-message" class="mt-3"></div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" 
            integrity="sha384-1CmrxMRARb6aLqgBO7V7YhxU3kj50o1Y8Q2mRWKbV+9jtk4G+PQnt3x5sPo4dQA3" 
            crossorigin="anonymous"></script>

    <!-- JavaScript -->
    <script>
        document.getElementById("upload-btn").addEventListener("click", async () => {
            const files = document.getElementById("file-input").files;
            const statusMessage = document.getElementById("status-message");
            const downloadBtn = document.getElementById("download-btn");

            // Reset status and download button
            statusMessage.textContent = "";
            downloadBtn.style.display = "none";

            if (files.length === 0) {
                statusMessage.textContent = "Please select at least one file.";
                statusMessage.className = "text-danger";
                return;
            }

            const formData = new FormData();
            for (let i = 0; i < files.length; i++) {
                formData.append("files", files[i]);
            }
            
            const url = "/api/upload"

            try {
                // Send files to Node.js backend
                const response = await fetch("/api/upload", {
                    method: "POST",
                    body: formData,
                });

                const result = await response.json();
                if (!response.ok) {
                    throw new Error(result.error || "Something went wrong.");
                }

                // Success
                statusMessage.textContent = "Files processed successfully. You can download the result.";
                statusMessage.className = "text-success";
                downloadBtn.style.display = "inline-block";

                // Set up download button
                downloadBtn.addEventListener("click", () => {
                    window.location.href = "/api/download-csv"; // Flask endpoint for CSV download
                });

                

            } catch (error) {
                statusMessage.textContent = error.message;
                statusMessage.className = "text-danger";
            }
        console.log("Sending request to:", url);
    
        });
                
    </script>
</body>
</html>